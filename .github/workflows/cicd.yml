name: build-and-deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
    # 1. GitHub 저장소의 소스코드를 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v4

    # 2. Java 17 설치 (temurin은 openjdk 디스트리뷰션 중 하나)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

    # 3. gradlew 실행권한 부여
      - name: Give execute permission to gradlew
        run: chmod +x gradlew
        working-directory: step07_CICD
    
    # 4. gradle 빌드 수행 -> Jar 파일 생성
      - name: Build JAR with Gradle
        run: ./gradlew build
        working-directory: step07_CICD

    # 5. Docker image 생성
      - name: Build Docker image
        run: docker build -t myapp .
        working-directory: step07_CICD

    # 6. 기존 컨테이너 중지(존재할 경우)
      - name: Stop existing container if exists
        run: docker stop myapp || true

    #7. 기존 컨테이너 삭제(존재할 경우)
      - name: Remove existing container if exists
        run: docker rm myapp || true
    
    #8. Docker 컨테이너 실행
      - name: Run Docker container
        run: docker run -d -p 8080:8080 --name myapp myapp

